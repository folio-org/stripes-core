# This workflow will do a clean install of node dependencies, build the source code, 
# run unit tests, and perform a SonarCloud scan. 

# For more information see: 
# https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

# Common FOLIO configurable env:
#   - YARN_TEST_OPTIONS
#   - SQ_ROOT_DIR
#   - FOLIO_NAME
#   - PUBLISH_MOD_DESCRIPTOR


name: buildNPM Snapshot
on: 
  push:
    paths-ignore:
      - 'translations/**'
  pull_request:
     paths-ignore:
      - 'translations/**'

jobs:
  Build:
    env:
      YARN_TEST_OPTIONS: '--karma.singleRun --karma.browsers ChromeDocker --karma.reporters mocha junit --coverage'
      FOLIO_NAME: stripes_core
      FOLIO_NPM_REGISTRY: 'https://repository.folio.org/repository/npm-folioci/'
      NODEJS_VERSION: '12'
      MODULE_DESCRIPTOR_DIR: 'artifacts/md'
      JEST_JUNIT_OUTPUT_DIR: 'artifacts/jest-junit'
      JEST_COVERAGE_REPORT_DIR: 'artifacts/coverage-jest/lcov-report/'
      BIGTEST_JUNIT_OUTPUT_DIR: 'artifacts/runTest'
      BIGTEST_COVERAGE_REPORT_DIR: 'artifacts/coverage/lcov-report/'
      PUBLISH_MOD_DESCRIPTOR: true
      SQ_ROOT_DIR: './src'
      SQ_LCOV_REPORT: 'artifacts/coverage-jest/lcov.info'
      SQ_EXCLUSIONS: '**/platform/alias-service.js,**/docs/**,**/node_modules/**,**/examples/**,**/artifacts/**,**/ci/**,Jenkinsfile,**/LICENSE,**/*.css,**/*.md,**/*.json,**/tests/**,**/stories/*.js,**/test/**,**/.stories.js,**/resources/bigtest/interactors/**,**/resources/bigtest/network/**,**/*-test.js,**/*.test.js,**/*-spec.js,**/karma.conf.js,**/jest.config.js'

    runs-on: ubuntu-latest
    steps:
      - uses: folio-org/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup kernel for react native, increase watchers
        run: echo fs.inotify.max_user_watches=524288 | sudo tee -a /etc/sysctl.conf && sudo sysctl -p
      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODEJS_VERSION }}
          check-latest: true
      - run: yarn config set @folio:registry $FOLIO_NPM_REGISTRY

      - name: Set FOLIO NPM snapshot version
        run: | 
          git clone https://github.com/folio-org/folio-tools.git
          npm --no-git-tag-version version `folio-tools/github-actions-scripts/folioci_npmver.sh`
          rm -rf folio-tools
        env: 
          JOB_ID: ${{ github.run_number }}


      - name: Run yarn install
        run: yarn install

      - name: Run yarn list
        run: yarn list --pattern @folio

      - name: Run yarn lint
        run: yarn lint
        continue-on-error: true

      - name: Run yarn test
        run: xvfb-run --server-args="-screen 0 1024x768x24" yarn test $YARN_TEST_OPTIONS 

      - name: Publish Jest unit test results
        uses: docker://ghcr.io/enricomi/publish-unit-test-result-action:v1
        if: always()
        with: 
          github_token: ${{ github.token }}
          files: "${{ env.JEST_JUNIT_OUTPUT_DIR }}/*.xml"
          check_name: Jest Unit Test Results
          comment_on_pr: true
          comment_title: Jest Unit Test Statistics

      - name: Publish Jest coverage report
        uses: actions/upload-artifact@v2
        if: always() 
        with: 
          name: jest-coverage-report 
          path: ${{ env.JEST_COVERAGE_REPORT_DIR }}
          retention-days: 30

      - name: Publish BigTest unit test results
        uses: docker://ghcr.io/enricomi/publish-unit-test-result-action:v1
        if: always()
        with: 
          github_token: ${{ github.token }}
          files: "${{ env.BIGTEST_JUNIT_OUTPUT_DIR }}/*.xml"
          check_name: BigTest Unit Test Results
          comment_on_pr: true
          comment_title: BigTest Unit Test Statistics

      - name: Publish BigTest coverage report
        uses: actions/upload-artifact@v2
        if: always() 
        with: 
          name: bigtest-coverage-report 
          path: ${{ env.BIGTEST_COVERAGE_REPORT_DIR }}
          retention-days: 30
 
      - name: Publish yarn.lock 
        uses: actions/upload-artifact@v2
        if: failure()
        with: 
          name: yarn.lock
          path: yarn.lock
          retention-days: 5

      - name: Fetch branches for SonarCloud
        run: git fetch --no-tags ${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY} +refs/heads/master:refs/remotes/origin/master
        
      - name: Run SonarCloud scan
        uses: sonarsource/sonarcloud-github-action@master
        with:
          args: >
            -Dsonar.organization=folio-org 
            -Dsonar.projectKey=org.folio:${{ github.event.repository.name }}
            -Dsonar.projectName=${{ github.event.repository.name }}
            -Dsonar.sources=${{ env.SQ_ROOT_DIR }}
            -Dsonar.language=js 
            -Dsonar.javascript.lcov.reportPaths=${{ env.SQ_LCOV_REPORT }}
            -Dsonar.exclusions=${{ env.SQ_EXCLUSIONS }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Publish NPM package to FOLIO npm repository
        if: contains(github.REF, 'master') || contains(github.REF,'main')
        uses: JS-DevTools/npm-publish@v1
        with:
          token: ${{ secrets.FOLIO_NEXUS_NPM_TOKEN }}
          registry: 'https://repository.folio.org/repository/npm-folioci-test/'
      
      - name: Generate Module descriptor
        if: ${{ env.PUBLISH_MOD_DESCRIPTOR }}
        run: stripes mod descriptor --full --strict | jq '.[]' > ${{ env.MODULE_DESCRIPTOR_DIR }}/${{ env.FOLIO_NAME }}.json
      

      - name: Publish Module descriptor
        uses: fjogeleit/http-request-action@master
        with:
          url: 'http://ec2-3-88-110-24.compute-1.amazonaws.com'
          method: 'POST'
          file: '{ "file": "${{ env.MODULE_DESCRIPTOR_DIR }}/${{ env.FOLIO_NAME }}.json" }'
          username: ${{ secrets.FOLIO_REGISTRY_USERNAME }}
          password: ${{ secrets.FOLIO_REGISTRY_PASSWORD }}


